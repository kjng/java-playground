package com.kevinjang.calcengine;

public class CalculateHelper {
	private static final char ADD_SYMBOL = '+';
	private static final char SUBTRACT_SYMBOL = '-';
	private static final char MULTIPLY_SYMBOL = '*';
	private static final char DIVIDE_SYMBOL = '/';
	
	MathCommand command;
	double leftValue;
	double rightValue;
	double result;
	
	public double process(String statement) {
		// add 1.0 2.0
		String[] parts = statement.split(" ");
		String commandString = parts[0];
		leftValue = Double.parseDouble(parts[1]);
		rightValue = Double.parseDouble(parts[2]);
		
		setCommandFromString(commandString);
		
		CalculateBase calculator = null;
		switch (command) {
		case Add:
			calculator = new Adder(leftValue, rightValue);
			break;
		case Subtract:
			calculator = new Adder(leftValue, rightValue);
			break;
		case Multiply:
			calculator = new Multiplier(leftValue, rightValue);
			break;
		case Divide:
			calculator = new Divider(leftValue, rightValue);
			break;
		}
		
		calculator.calculate();
		result = calculator.getResult();
		return result;
	}
	
	private void setCommandFromString(String commandString) {
		// add => MathCommand.Add
		
		switch (commandString.toLowerCase()) {
		case "add":
			command = MathCommand.Add;
			break;
		case "subtract":
			command = MathCommand.Subtract;
			break;
		case "multiply":
			command = MathCommand.Multiply;
			break;
		case "divide":
			command = MathCommand.Divide;
			break;
		}
	}
	
	@Override
	public String toString() {
		// 1.0 + 2.0 = 3.0
		char symbol = ' ';
		
		switch (command) {
		case Add:
			symbol = ADD_SYMBOL;
			break;
		case Subtract:
			symbol = SUBTRACT_SYMBOL;
			break;
		case Multiply:
			symbol = MULTIPLY_SYMBOL;
			break;
		case Divide:
			symbol = DIVIDE_SYMBOL;
			break;
		}
		
		StringBuilder sb = new StringBuilder(20);
		sb.append(leftValue);
		sb.append(' ');
		sb.append(symbol);
		sb.append(' ');
		sb.append(rightValue);
		sb.append(" = ");
		sb.append(result);
		
		return sb.toString();
	}
	
}
